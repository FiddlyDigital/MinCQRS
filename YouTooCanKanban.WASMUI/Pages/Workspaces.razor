@page "/"
@using System.Collections.ObjectModel
@using YouTooCanKanban.API.Client.Interfaces
@using YouTooCanKanban.API.Client.Models
@using YouTooCanKanban.Domain.Models
@using YouTooCanKanban.WASMUI.Services
@inject IWorkspacesDataService workspacesDataService
@inject IDialogService DialogService

<PageTitle>Workspaces</PageTitle>

<MudTable Items="@workspaceList" Hover="true" Bordered="true" Striped="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Workspaces</MudText>
        <MudSpacer />
        <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Create" Color="Color.Primary" Size="Size.Small"
                   OnClick="()=>{ CreateEditWorkspace(-1); }">Create</MudButton>
    </ToolBarContent>
    <ColGroup>
        <col style="width: 60px;" />
        <col />
        <col style="width: 60px;" />
        <col style="width: 180px;" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>No.Boards</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="No.Boards">@context.Boards?.Count</MudTd>
        <MudTd DataLabel="Actions" Style="text-align:center">
            <MudButton Variant="Variant.Filled" Color="Color.Warning" Size="Size.Small" OnClick="()=>{ CreateEditWorkspace(context.Id); }">
                <MudIcon Icon="@Icons.Material.Filled.Edit" Size="Size.Small" />
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Error" Size="Size.Small" OnClick="()=>{ DeleteWorkspace(context.Id); }">
                <MudIcon Icon="@Icons.Material.Filled.Delete" Size="Size.Small" />
            </MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 25, 50, 100 }" />
    </PagerContent>
</MudTable>

@code {
    private bool _loading;
    private IEnumerable<WorkspaceModel>? workspaceList = new List<WorkspaceModel>();

    protected override async Task OnInitializedAsync()
    {
        _loading = true;

        try
        {
            workspaceList = await workspacesDataService.GetList(
                new GetListParams() { Page = 1, PageSize = 25 }
            );
        }
        catch (Exception exc)
        {
            await DialogService.ShowMessageBox(
                "Error",
                "Cannot retrieve workspaces:\n" + exc.Message,
                yesText: "Ok");
        }
        finally
        {
            _loading = false;
        }
    }

    private void CreateEditWorkspace(int workspaceId)
    {
        // open the dialog with this id - it will perform GetByID Interally

        // if the
    }

    private void DeleteWorkspace(int workspaceId)
    {

    }
}